security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider

    role_hierarchy:
        ROLE_USER: ~
        ROLE_MODERATOR: ROLE_USER
        ROLE_PROVIDER: ROLE_USER
        ROLE_OMDB: ROLE_USER
        ROLE_ADMIN:
            - ROLE_MODERATOR
            - ROLE_PROVIDER
            - ROLE_OMDB

    access_decision_manager:
        strategy: affirmative # priority, consensus, unanimous
        allow_if_all_abstain: false
        allow_if_equal_granted_denied: true

    providers:
        app_admin_users:
            memory:
                users:
                    admin@admin.com: { password: '%env(ADMIN_PWD)%', roles: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH] }
        app_entity_users:
            entity:
                class: App\Entity\User
                property: email
        app_all_users:
            chain:
                providers: [app_admin_users, app_entity_users]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_all_users
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            logout:
                path: app_logout
#            custom_authenticators:
#                - App\Security\AppLoginFormAuthenticator

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/(login|register), roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/\w+, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
